//
//  Home2.swift
//  SwiftUI07
//
//  Created by JosÃ© Antonio Lara SÃ¡nchez on 12/2/25.
//

import SwiftUI // ðŸ“Œ Importamos SwiftUI para construir la interfaz grÃ¡fica.

struct Home2: View { // ðŸ“Œ Define una vista llamada `Home2`, que muestra una lista de usuarios con imÃ¡genes.
    
    @StateObject var json2 = Modelo2ViewModel() // âœ… `@StateObject` crea una instancia de `Modelo2ViewModel`, que obtiene datos de la API.

    var body: some View {
        if json2.datosModelo.data.isEmpty { // âœ… Si `data` estÃ¡ vacÃ­o, significa que aÃºn no se han cargado los datos.
            ProgressView() // ðŸ”µ Muestra un indicador de carga mientras se obtienen los datos.
        
        } else { // âœ… Si los datos ya estÃ¡n listos, se muestra la lista de usuarios.
            List(json2.datosModelo.data, id: \.id) { item in // ðŸ”µ Itera sobre la lista de usuarios y los muestra en la `List`.
                
                NavigationLink(destination: DetalleView(id: item.id)) { // âœ… Al tocar un usuario, navega a `DetalleView` con su `id`.
                    HStack { // ðŸ”µ Organiza la imagen y los textos en una fila horizontal.

                        // âœ… Carga la imagen del usuario de forma asÃ­ncrona desde la URL
                        AsyncImage(url: URL(string: item.avatar)!) { image in
                            image
                                .resizable() // ðŸ”µ Permite que la imagen se pueda escalar.
                                .frame(width: 80, height: 80) // ðŸ”µ TamaÃ±o fijo de la imagen (80x80 pÃ­xeles).
                                .clipped() // ðŸ”µ Recorta la imagen si es necesario.
                                .clipShape(Circle()) // ðŸ”µ Convierte la imagen en un cÃ­rculo.
                        } placeholder: {
                            ProgressView() // ðŸ”µ Muestra un indicador de carga mientras la imagen se descarga.
                        }

                        VStack(alignment: .leading) { // âœ… Muestra la informaciÃ³n del usuario en una columna alineada a la izquierda.
                            Text(item.first_name).font(.title) // ðŸ”µ Muestra el nombre del usuario con un estilo grande.
                            Text(item.email).font(.subheadline) // ðŸ”µ Muestra el email del usuario en un estilo mÃ¡s pequeÃ±o.
                        }
                    }
                    .navigationBarTitle("Json con imagen") // âœ… Define el tÃ­tulo de la barra de navegaciÃ³n.
                }
            }
        }
    }
}

