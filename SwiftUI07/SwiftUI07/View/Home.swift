//
//  Home.swift
//  SwiftUI07
//
//  Created by JosÃ© Antonio Lara SÃ¡nchez on 12/2/25.
//

import SwiftUI // ğŸ“Œ Importamos SwiftUI para construir la interfaz grÃ¡fica.

struct Home: View { // ğŸ“Œ Define la vista principal despuÃ©s de que el usuario inicia sesiÃ³n.
    
    @EnvironmentObject var login: PostViewModel // âœ… `@EnvironmentObject` permite acceder a `PostViewModel`, que maneja la autenticaciÃ³n.
    @StateObject var json = Modelo1ViewModel() // âœ… `@StateObject` crea una instancia de `Modelo1ViewModel`, que obtiene los datos de una API.

    var body: some View {
        NavigationStack { // âœ… `NavigationStack` permite la navegaciÃ³n entre vistas.
            
            if json.datosModelo.isEmpty { // âœ… Si `datosModelo` estÃ¡ vacÃ­o, significa que los datos aÃºn no se han cargado.
                ProgressView() // ğŸ”µ Muestra un indicador de carga mientras se obtienen los datos.
            
            } else { // âœ… Cuando los datos han sido cargados, se muestra la lista.
                List(json.datosModelo, id: \.id) { item in // ğŸ”µ Muestra una lista de usuarios obtenidos de la API.
                    VStack(alignment: .leading) { // ğŸ”µ Organiza el contenido de cada celda alineado a la izquierda.
                        Text(item.name) // âœ… Muestra el nombre del usuario.
                        Text(item.email) // âœ… Muestra el email del usuario.
                        Text(item.address.geo.lat) // âœ… Muestra la latitud de la ubicaciÃ³n del usuario.
                        Text(item.address.geo.lng) // âœ… Muestra la longitud de la ubicaciÃ³n del usuario.
                    }
                }
                .navigationBarTitle("JSON") // âœ… Define el tÃ­tulo de la barra de navegaciÃ³n.

                .navigationBarItems(leading: Button(action: { // âœ… Agrega un botÃ³n a la barra de navegaciÃ³n para cerrar sesiÃ³n.
                    UserDefaults.standard.removeObject(forKey: "sesion") // ğŸ”µ Elimina la sesiÃ³n guardada en `UserDefaults`.
                    login.authenticated = 0 // ğŸ”µ Cambia el estado de autenticaciÃ³n a `0`, volviendo a la pantalla de Login.
                }) {
                    Text("Salir") // ğŸ”µ Texto del botÃ³n.
                
                }, trailing: // âœ… Agrega un botÃ³n de navegaciÃ³n en la parte derecha.
                
                NavigationLink(destination: Home2()) { // ğŸ”µ `NavigationLink` permite navegar a la vista `Home2`.
                    Text("Siguiente") // ğŸ”µ Texto del botÃ³n de navegaciÃ³n.
                })
            }
        }
    }
}

            }
        }
    }
}


